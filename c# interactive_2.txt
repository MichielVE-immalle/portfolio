Microsoft (R) Roslyn C# Compiler version 1.3.3.60707
Loading context from 'CSharpInteractive.rsp'.
Type "#help" for more information.
> Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)
"\\\\imma-fs-0003\\michiel.vaneester$\\documents"
> var deCsvFile = Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "geboortedata.csv");
> deCsvFile
"\\\\imma-fs-0003\\michiel.vaneester$\\documents\\geboortedata.csv"
> var paden = new string[3];
> paden[0] = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments);
> paden[1] = "submap";
> paden[2] = "bla.txt";
> paden
string[3] { "\\\\imma-fs-0003\\michiel.vaneester$\\documents", "submap", "bla.txt" }
> paden;
(1,1): error CS0201: Only assignment, call, increment, decrement, and new object expressions can be used as a statement
> Path.Combine(Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments), "submap", "bla.txt")
"\\\\imma-fs-0003\\michiel.vaneester$\\documents\\submap\\bla.txt"
> deCsvFile
"\\\\imma-fs-0003\\michiel.vaneester$\\documents\\geboortedata.csv"
> deCsvFile.GetType();
> 
>   
> 
> 
> deCsvFile.GetType()
[System.String]
> 
> enum Geslacht { Man, Vrouw };
> Geslacht
(1,1): error CS0119: 'Geslacht' is a type, which is not valid in the given context
> Geslacht g;
> g = new Geslacht();
> enum Importance
. {
.     None,
.     Trivial,
.     Regular,
.     Important,
.     Critical
. }
> g = Geslacht.Vrouw
Vrouw
> g
Vrouw
> Geslacht m;
> m = Geslacht.Man
Man
> Importance i1 = Importance.Trivial;
> i1
Trivial
> string fileInhoud = File.ReadAllText(deCsvFile);
> string[] lijnen = File.ReadAllLines(deCsvFile);
> fileInhoud
"voornaam;achternaam;geboortedatum\r\nJos;Janssens;1990-01-02\r\nJef;Janssens;1991-02-03\r\nMieke;Janssens;1992-03-04"
> lijnen
string[4] { "voornaam;achternaam;geboortedatum", "Jos;Janssens;1990-01-02", "Jef;Janssens;1991-02-03", "Mieke;Janssens;1992-03-04" }
> lijnen[0]
"voornaam;achternaam;geboortedatum"
> lijnen[1]
"Jos;Janssens;1990-01-02"
> lijnen[2]
"Jef;Janssens;1991-02-03"
> lijnen[3]
"Mieke;Janssens;1992-03-04"
> lijnen[4]
De index ligt buiten de matrixgrenzen.
> //lol
> class Persoon
. {
.     public string Voornaam { get; set; }
.     public string Achternaam { get; set; }
.     public DateTime GeboorteDatum { get; set; }
. }
> Persoon
(1,1): error CS0119: 'Persoon' is a type, which is not valid in the given context
> Persoon y = new Persoon();
> Persoon X;
> X
null
> y
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/01/0001 0:00:00], Voornaam=null }
> X = y;
> 
> 
> X
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/01/0001 0:00:00], Voornaam=null }
> y
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/01/0001 0:00:00], Voornaam=null }
> X.voornaam = "Anneke";
(1,3): error CS1061: 'Persoon' does not contain a definition for 'voornaam' and no extension method 'voornaam' accepting a first argument of type 'Persoon' could be found (are you missing a using directive or an assembly reference?)
> X.Voornaam = "Anneke"
"Anneke"
> X
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/01/0001 0:00:00], Voornaam="Anneke" }
> X == y
true
> Persoon z = new Persoon();
> z.Voornaam = "Willy";
> z.GeboorteDatum = new DateTime(1990, 8, 1);
> X ==z
false
> Persoon q = new Persoon();
. q.Voornaam = "Anneke";
> q
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/01/0001 0:00:00], Voornaam="Anneke" }
> z
Submission#39.Persoon { Achternaam=null, GeboorteDatum=[1/08/1990 0:00:00], Voornaam="Willy" }
> DateTime tijdstip1 = new DateTime(1990, 1, 1);
> DateTime tijdstip2;
> tijdstip1
[1/01/1990 0:00:00]
> tijdstip2
[1/01/0001 0:00:00]
> tijdstip2 = tijdstip1;
> tijdstip2
[1/01/1990 0:00:00]
> tijdstip1.AddYears(3)
[1/01/1993 0:00:00]
> tijdstip2.AddYears(3)
[1/01/1993 0:00:00]
> tijdstip2 = tijdstip2.AddYears(3)
[1/01/1993 0:00:00]
> DateTime verjaardag = new DateTime(2000, 7, 26);
> verjaardag.DayOfWeek
Wednesday
> verjaardag = new DateTime(2017, 7, 26);
> verjaardag.DayOfWeek
Wednesday
> DateTime verjaardag = new DateTime(2000, 7, 26);
> verjaardag
[26/07/2000 0:00:00]
> DateTime.Now - verjaardag
[6074.11:51:32.1530876]
> var lengte = DateTime.Now - verjaardag;
> lengte.GetType()
[System.TimeSpan]
> lengte.TotalSeconds
524836339,78659439
> TimeSpan ts = new TimeSpan(2, 2, 0, 10);
> ts
[2.02:00:10]
> "Tot morgen " + y.Voornaam + " " + y.Achternaam
"Tot morgen Anneke "
> y.Achternaam = "Vandamme";
> "Tot morgen " + y.Voornaam + " " + y.Achternaam
"Tot morgen Anneke Vandamme"
> string ZegTotMorgen(Persoon p)
. {
.     return "Tot morgen " + p.Voornaam;
. }
> 